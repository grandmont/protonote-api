generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
  output   = "../src/generated"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  email        String        @unique
  name         String?
  picture      String?
  provider     AuthProvider
  protos       Proto[]
  integrations Integration[]
}

model Proto {
  id              Int               @id @default(autoincrement())
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @default(now())
  title           String?
  description     String?
  dateString      String?
  user            User              @relation(fields: [userId], references: [id])
  userId          Int
  IntegrationData IntegrationData[]
}

model Integration {
  id              Int                  @id @default(autoincrement())
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @default(now())
  externalId      String
  provider        IntegrationProvider?
  status          IntegrationStatus?
  user            User                 @relation(fields: [userId], references: [id])
  userId          Int
  IntegrationData IntegrationData[]
}

model IntegrationData {
  id            Int         @id @default(autoincrement())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @default(now())
  data          String
  integration   Integration @relation(fields: [integrationId], references: [id])
  integrationId Int
  proto         Proto       @relation(fields: [protoId], references: [id])
  protoId       Int
}

enum AuthProvider {
  GOOGLE
  APPLE
}

enum IntegrationProvider {
  SPOTIFY
}

enum IntegrationStatus {
  CONNECTED
  DISCONNECTED
}
